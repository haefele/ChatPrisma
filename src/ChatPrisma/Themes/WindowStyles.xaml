<ResourceDictionary x:Class="ChatPrisma.Themes.WindowStyles" 
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:converters="clr-namespace:ChatPrisma.Themes.Converters" xmlns:wpf="clr-namespace:FluentIcons.WPF;assembly=FluentIcons.WPF">
    <Style TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <!-- This enables moving and resizing our custom window -->
                <WindowChrome>
                    <WindowChrome.ResizeBorderThickness>2</WindowChrome.ResizeBorderThickness> <!-- Actual Visible Thickness of WindowBorder -->
                    <WindowChrome.CaptionHeight>30</WindowChrome.CaptionHeight> <!-- Titlebar height minus ResizeBorderThickness -->
                </WindowChrome> 
            </Setter.Value>
        </Setter>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Icon" Value="pack://application:,,,/ChatPrisma;component/Themes/Images/AppIcon.ico" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <ControlTemplate.Resources>
                        <converters:BorderClipConverter x:Key="BorderClipConverter" />
                    </ControlTemplate.Resources>
                    <Border CornerRadius="10">
                        <Border.Clip>
                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                            </MultiBinding>
                        </Border.Clip>

                        <Grid>
                            <!-- Animated Border -->
                            <Border CornerRadius="10" Margin="-2" BorderThickness="4" Panel.ZIndex="2" x:Name="WindowBorder"
                                    Visibility="{DXBinding '@a($Window).IsActive ? $Visibility.Visible : $Visibility.Collapsed'}">
                                <Border.BorderBrush>
                                    <LinearGradientBrush x:Name="BorderBrush" StartPoint="0,0" EndPoint="0,1" Opacity="0.8">
                                        <GradientStop Color="#19C6FD" Offset="0.0"/>
                                        <GradientStop Color="#F01899" Offset="0.5"/>
                                        <GradientStop Color="#0E0D78" Offset="1.0"/>
                                        <LinearGradientBrush.Transform>
                                            <RotateTransform CenterX="{DXBinding '@e(WindowBorder).ActualWidth / 2'}" 
                                                             CenterY="{DXBinding '@e(WindowBorder).ActualHeight / 2'}" 
                                                             Angle="0" />
                                        </LinearGradientBrush.Transform>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Border.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetName="WindowBorder"
                                                                 Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.Transform).(RotateTransform.Angle)"
                                                                 From="0.0" 
                                                                 To="359" 
                                                                 Duration="00:00:10" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                            </Border>
                            
                            <!-- IsActive = false Border -->
                            <Border CornerRadius="10" Margin="-2" BorderThickness="4" Panel.ZIndex="2"
                                    Visibility="{DXBinding '@a($Window).IsActive ? $Visibility.Collapsed : $Visibility.Visible'}"
                                    BorderBrush="DimGray" />

                            <!-- Purple Gradient from top-left to bottom-right -->
                            <Rectangle Width="Auto" Height="Auto">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#AF77E7" Offset="0.0"/>
                                        <GradientStop Color="#0E0D78" Offset="0.7"/>
                                        <GradientStop Color="#0E0D78" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <!-- White-Pink-Transparent Gradient top-left to bottom-right -->
                            <Rectangle Width="Auto" Height="Auto">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop Color="#FFFFFF" Offset="0.0"/>
                                        <GradientStop Color="#F01899" Offset="0.3"/>
                                        <GradientStop Color="#00000000" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <!-- Transparent-Lightblue Gradient top-middle to bottom-left -->
                            <Rectangle Width="Auto" Height="Auto">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0.6,0" EndPoint="0,0.8">
                                        <GradientStop Color="#00000000" Offset="0.0"/>
                                        <GradientStop Color="#00000000" Offset="0.3"/>
                                        <GradientStop Color="#00C2FC" Offset="0.95"/>
                                        <GradientStop Color="#19C6FD" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                            <!-- Pattern Overlay -->
                            <Rectangle>
                                <Rectangle.Fill>
                                    <ImageBrush ImageSource="./Images/WindowTiles.png" 
                                                TileMode="Tile" 
                                                Opacity="0.6"
                                                ViewportUnits="Absolute" 
                                                Viewport="0,0,200,200" />
                                </Rectangle.Fill>
                            </Rectangle>

                            <!-- Actual Content -->
                            <Grid Margin="0, 32, 0, 0">
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </Grid>
                            
                            <!-- Titlebar -->
                            <Grid Height="32"
                                  VerticalAlignment="Top"
                                  Margin="2, 0, 2, 0"> <!-- Margin left and right to compensate for the actual border thickness of WindowBorder -->
                                <Grid.Background>
                                    <SolidColorBrush Color="Black"  Opacity="0.7" />
                                </Grid.Background>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Border x:Name="TitlebarBorder" 
                                        Grid.Column="0" 
                                        Grid.ColumnSpan="3" 
                                        BorderThickness="0, 0, 0, 1">
                                    <Border.Margin>0, 0, 0, -1</Border.Margin> <!-- Pull it down 1 pixel below the titlebar background color, so it doesn't overlap -->
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="1, 0" EndPoint="0, 0">
                                            <GradientStop Offset="0" Color="#00FFFFFF" />
                                            <GradientStop Offset="0.3" Color="#80FFFFFF" />
                                            <GradientStop Offset="0.7" Color="#20FFFFFF" />
                                            <GradientStop Offset="1" Color="#80FFFFFF" />
                                            <LinearGradientBrush.Transform>
                                                <RotateTransform CenterX="{DXBinding '@e(TitlebarBorder).ActualWidth / 2'}" 
                                                                 CenterY="{DXBinding '@e(TitlebarBorder).ActualHeight / 2'}" 
                                                                 Angle="0" />
                                            </LinearGradientBrush.Transform>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Triggers>
                                        <EventTrigger RoutedEvent="Border.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard RepeatBehavior="Forever">
                                                    <DoubleAnimation Storyboard.TargetName="TitlebarBorder"
                                                                     Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.Transform).(RotateTransform.Angle)"
                                                                     From="0.0" 
                                                                     To="359" 
                                                                     Duration="00:00:05" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Border.Triggers>
                                </Border>

                                <Image Source="{TemplateBinding Icon}"
                                       Grid.Column="0"
                                       RenderOptions.BitmapScalingMode="HighQuality"
                                       Margin="4, 2, 0, 0"
                                       Width="20"
                                       Height="20"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />

                                <TextBlock Grid.Column="0"
                                           Grid.ColumnSpan="3"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontSize="16"
                                           FontWeight="SemiBold"
                                           Foreground="White"
                                           Text="{TemplateBinding Title}" />

                                <Button Grid.Column="2"
                                        Width="40"
                                        Click="CloseButton_Click"
                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Grid>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBackground" 
                                                                                               Storyboard.TargetProperty="(Border.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.15" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CloseButtonBackground" 
                                                                                               Storyboard.TargetProperty="(Border.Opacity)">
                                                                    <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="CloseButtonBackground" Background="White" Opacity="0" />

                                                <ContentPresenter />
                                            </Grid>
                                        </ControlTemplate>
                                    </Button.Template>

                                    <wpf:SymbolIcon Symbol="Dismiss" Foreground="White" FontSize="16" />
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>